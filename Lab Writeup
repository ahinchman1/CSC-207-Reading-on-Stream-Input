Amanda Hinchman and Renn Jervis 
CSC-207-01 
			Lab Write-up: Lab on Stream Input in Java

2) Run TestScanner1.java (using your file name), and be sure you can explain how this program works.

a) The console prints "java.io.FileNotFoundException: 
	"etest.data (No such file or directory)", if we mispell the path name; 
	the program compiles but when it runs it cannot locate the data to read.
		
b)	The console prints "Exception in thread "main" java.lang.Error: Unresolved 
 	compilation problem: Unhandled exception type FileNotFoundException
	at testScores.TestScanner1.main(TestScanner1.java:22)" if we delete the 
	try-catch details. In this instance, the program will not compile because 
	of an unhandled exception.

c) When we add the "throws exception" clause, the progran runs correctly. The 
 	program outputs:
   
Name                      Test
First    Last		 1 	2 	3      Average
Egbert Bacon      	88	85	91	88.0
William Hemingway 	79	63	68	70.0
Frances Homer     	94	86	81	87.0
PoWer MacHinery   	84	91	93	89.33333333333333
R. McDonald       	82	96	94	90.66666666666667
L. Bo-Peep        	76	78	82	78.66666666666667
A.N. Onymous      	72	81	76	76.33333333333333
Henry Shakespeare 	90	92	88	90.0
I.M. Silly        	0	70	85	51.666666666666664
P.Arty Time       	62	9	59	43.333333333333336
MacK. Walker      	93	87	89	89.66666666666667

Maximum     		94	96	94
Minimum   		    0	9	59

d) When we remove one set of test scores and run the program, the consul 
	ouputs:

      Name                      Test
First    Last		 1 	2 	3      Average
Exception in thread "main" java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString
	(NumberFormatException.java:65)at java.lang.Integer.parseInt
	(Integer.java:592)at java.lang.Integer.<init>(Integer.java:867)
	at testScores.TestScanner1.main(TestScanner1.java:56)
	
  In this case the program begins to run but cannot finish because it tries to 
  parse a null string (the result of the last call to substring) into a integer,
  which throws an exception and halts program execution.
	
e) When we run the program on data with four sets of test scores the consul 
	ouputs:
	      Name                      Test
First    Last		 1 	2 	3      Average
Exception in thread "main" java.lang.NumberFormatException: For input string: 
"88     85"at java.lang.NumberFormatException.forInputString
(NumberFormatException.java:65)at java.lang.Integer.parseInt
(Integer.java:580)at java.lang.Integer.<init>(Integer.java:867)at testScores.
TestScanner1.main(TestScanner1.java:56)
	
The program again does not finish running because it attempts to read and
format two test scores separated by spaces into a single int.
	
3)Repeat Step 2 with program TestBufferedReader1.java

a) 	The consul outputs:
    java.io.FileNotFoundException: testy.data (No such file or directory)
	if we mispell the path name; the program compiles but when it runs 
	it cannot locate the data to read.
	
b) If we delete the try-catch details the program outputs: "Exception in thread 
"main" java.lang.Error: Unresolved compilation problems: 
	Unhandled exception type FileNotFoundException
	Unhandled exception type IOException
	Unhandled exception type IOException

	at testScores.TestBufferedReader1.main(TestBufferedReader1.java:21)
	
The program doesn't run because it can't compile, because it finds several 
unhandled erros (exceptions).	

c) The program runs successfully if we add the phrase "throws Exception". The
consul outputs:

Name                      Test
First    Last  		 1	 2	 3      Average
Egbert Bacon      	88	85	88	87.0
William Hemingway 	79	63	88	76.66666666666667
Frances Homer     	94	86	88	89.33333333333333
PoWer MacHinery   	84	91	88	87.66666666666667
R. McDonald       	82	96	88	88.66666666666667
L. Bo-Peep        	76	78	88	80.66666666666667
A.N. Onymous      	72	81	88	80.33333333333333
Henry Shakespeare 	90	92	88	90.0
I.M. Silly        	0	70	88	52.666666666666664
P.Arty Time       	62	9	88	53.0
MacK. Walker      	93	87	88	89.33333333333333

Maximum     		94	96	88
Minimum     		0	9	88

e) As with the earlier class when we remove a column of test scores this
program does not finish running because it attempts to read and
format the null string into an integer, which throws an exception.
      Name                      Test
First    Last  		 1	 2	 3      Average
Exception in thread "main" java.lang.NumberFormatException: For input string: 
""at java.lang.NumberFormatException.forInputString(NumberFormatException.
java:65)at java.lang.Integer.parseInt(Integer.java:592)at java.lang.Integer.
<init>(Integer.java:867)at testScores.TestBufferedReader1.main[
TestBufferedReader1.java:55)
	
f)    When we add a column of test scores to the original number (3) the
program does not finish running because it attempts to read and
format the two numbers separated by whitespace into an integer, which throws an
exception.
    Name                      Test
First    Last  		 1	 2	 3      Average
Exception in thread "main" java.lang.NumberFormatException: For input string:
 "88     85"at java.lang.NumberFormatException.forInputString
(NumberFormatException.java:65)at java.lang.Integer.parseInt(Integer.java:580)
at java.lang.Integer.<init>(Integer.java:867)at testScores.TestBufferedReader1.
main(TestBufferedReader1.java:55)

4) Write a Java program Greet.java that prompts the user for a name, reads 
a name from the keyboard, and prints a greeting to the screen. Your 
output should resemble the following:

   What is your name? Terry
   Have a nice day Terry!

a) 	Use Java's Scanner class to read this input.

/** Program using Scanner class that greets the user after promptring 
for input from the keyboard */

package testScores;

import java.util.Scanner;

public class Greet
{

  public static void main (String args[])
  {   
    /* use System.in to initialize scanner */
    Scanner fileIn = new Scanner (System.in);

    System.out.print("What is your name? ");
    /* read entire next line */
    String name = fileIn.nextLine();
    System.out.println("Have a nice day " + name+ "!");

  }//main (String[])
}//class Greet

/* consul output:
*
* What is your name? REnn
* Have a nice day REnn!
*/

b) Use BufferedReader with InputStreamReader to read this input.

i. Place the readLine within a try..catch block when performing this input.

/* 	Program using Buffered Reader class that greets the user after promptring 
for input from the keyboard */

package testScores;

import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;

public class GreetBuff
{
  public static void main (String args[])
  {
    try
    { 
      InputStreamReader istream = new InputStreamReader (System.in);
     /* initialize scanner via FileReader object */
    BufferedReader fileIn = new BufferedReader (istream);

    System.out.print("What is your name? ");
    //* read entire next line */
    String name = fileIn.readLine();
    System.out.println("Have a nice day " + name+ "!");
    }// try
    catch (IOException e)
    {   // identify any error that arises
        System.err.println (e);
    } //catch
  }// main (String[])0
}// GreetBuff

/* consul output:
*
* What is your name? Amanda
* Have a nice day Amanda!
*/

b.ii Specify that main may throw an exception (so no try..catch block will be
needed for readLine).
package testScores;

import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;

public class GreetBuff 
{
  public static void main (String args[]) throws Exception
  {
    
      InputStreamReader istream = new InputStreamReader (System.in);
     // use FileReader object to initialize scanner
    BufferedReader fileIn = new BufferedReader (istream);

    System.out.print("What is your name? ");
    //read entire line
    String name = fileIn.readLine();
    System.out.println("Have a nice day " + name+ "!");


  }// main (String[])
}// GreetBuff

/* output:
*
* What is your name?  Renn
* Have a nice day  Renn!
*/

6) Modify the previous step, so that the program continues to add your entered 
numbers until you enter a 0. Once zero is entered, the program should show
the total of your numbers.

i) using Scanner class:

package streamInput;

import java.util.Scanner;

/* Program using Scanner class to read numbers from the keyboard until the user
 * types 0 and then return the sum of all numbers entered.
 */
public class Add {

	public static void main (String args []) {
		
		 // use FileReader object to initialize scanner
		Scanner fileIn = new Scanner (System.in);
		
		System.out.print("Please enter numbers to be summed, and ");
		System.out.println("enter zero when you want the sum");
		
		int num;
		int sum= 0;
		while ((num = fileIn.nextInt()) != 0)
		{
			sum += num;
		}
	
		System.out.println("The sum of the numbers is: " +sum);
	}
}

ii) using BufferedReader:

package streamInput;



import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

/* Program to read numbers from the keyboard using the Buffered Reader Class 
 * until the user types 0 and then return the sum of all numbers entered.
 */
public class AddBuff {

	public static void main (String args []) throws Exception{

		/* set up buffered reader */
		InputStreamReader istream = new InputStreamReader (System.in);
		BufferedReader fileIn = new BufferedReader(istream);

		System.out.print("Please enter numbers to be summed, and ");
		System.out.println("enter zero when you want the sum");
		
		int num;
		int sum= 0;
		while ( (num = Integer.parseInt(fileIn.readLine())) != 0)
		{
			sum += num;
		}
	
		System.out.println("The sum of the numbers is: " +sum);
	}
}

8) Modify smallerQuadraticRoot, so that it tests whether coefficient a is zero. 
If so, the method should throw an exception.

